{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initialGuess]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < userNumber || direction === \"greater\" && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [{\n        text: \"Sorry!\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  }\n\n  var guessRoundsListLength = guessRounds.length;\n\n  var content = _jsxs(_Fragment, {\n    children: [_jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.instructionText,\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"greater\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })]\n    })]\n  });\n\n  if (width > 500) {\n    content = _jsx(_Fragment, {\n      children: _jsxs(View, {\n        style: styles.buttonsContainerWide,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(NumberContainer, {\n          children: currentGuess\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"greater\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), content, _jsx(View, {\n      style: styles.listContainer,\n      children: _jsx(FlatList, {\n        data: guessRounds,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNumber: guessRoundsListLength - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n}\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n    alignItems: \"center\"\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  buttonsContainerWide: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["useState","useEffect","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","GuessLogItem","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","guessRounds","setGuessRounds","useWindowDimensions","width","height","length","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","prevGuessRounds","guessRoundsListLength","content","styles","instructionText","buttonsContainer","buttonContainer","bind","buttonsContainerWide","screen","listContainer","itemData","index","item","StyleSheet","create","flex","padding","alignItems","marginBottom","flexDirection"],"sources":["C:/Users/frang/Desktop/projects/react-native-projects/guess number/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  Alert,\n  FlatList,\n  useWindowDimensions,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nlet minBoundary = 1;\nlet maxBoundary = 100;\n\nfunction GameScreen({ userNumber, onGameOver }) {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n  const [guessRounds, setGuessRounds] = useState([initialGuess]);\n  const { width, height } = useWindowDimensions();\n\n  useEffect(() => {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  useEffect(() => {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    // direction => 'lower', 'greater'\n    if (\n      (direction === \"lower\" && currentGuess < userNumber) ||\n      (direction === \"greater\" && currentGuess > userNumber)\n    ) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [\n        { text: \"Sorry!\", style: \"cancel\" },\n      ]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    const newRndNumber = generateRandomBetween(\n      minBoundary,\n      maxBoundary,\n      currentGuess\n    );\n    setCurrentGuess(newRndNumber);\n    setGuessRounds((prevGuessRounds) => [newRndNumber, ...prevGuessRounds]);\n  }\n\n  const guessRoundsListLength = guessRounds.length;\n\n  let content = (\n    <>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card>\n        <InstructionText style={styles.instructionText}>\n          Higher or lower?\n        </InstructionText>\n        <View style={styles.buttonsContainer}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n        </View>\n      </Card>\n    </>\n  );\n  if (width > 500) {\n    content = (\n      <>\n        <View style={styles.buttonsContainerWide}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n          <NumberContainer>{currentGuess}</NumberContainer>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n        </View>\n      </>\n    );\n  }\n\n  return (\n    <View style={styles.screen}>\n      <Title>Opponent's Guess</Title>\n      {content}\n      <View style={styles.listContainer}>\n        {/* {guessRounds.map(guessRound => <Text key={guessRound}>{guessRound}</Text>)} */}\n        <FlatList\n          data={guessRounds}\n          renderItem={(itemData) => (\n            <GuessLogItem\n              roundNumber={guessRoundsListLength - itemData.index}\n              guess={itemData.item}\n            />\n          )}\n          keyExtractor={(item) => item}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24,\n    alignItems: \"center\",\n  },\n  instructionText: {\n    marginBottom: 12,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  buttonsContainerWide: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}