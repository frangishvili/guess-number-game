{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid number!\", \"Number has to be a number between 1 and 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  var marginTopDistance = height < 500 ? 50 : 100;\n  return _jsx(ScrollView, {\n    style: styles.screen,\n    children: _jsx(KeyboardAvoidingView, {\n      style: styles.screen,\n      behavior: \"position\",\n      children: _jsxs(View, {\n        style: [styles.rootContainer, {\n          marginTop: marginTopDistance\n        }],\n        children: [_jsx(Title, {\n          children: \"Guess My Number\"\n        }), _jsxs(Card, {\n          children: [_jsx(InstructionText, {\n            children: \"Enter a Number\"\n          }), _jsx(TextInput, {\n            style: styles.numberInput,\n            maxLength: 2,\n            keyboardType: \"number-pad\",\n            autoCapitalize: \"none\",\n            autoCorrect: false,\n            onChangeText: numberInputHandler,\n            value: enteredNumber\n          }), _jsxs(View, {\n            style: styles.buttonsContainer,\n            children: [_jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: resetInputHandler,\n                children: \"Reset\"\n              })\n            }), _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: confirmInputHandler,\n                children: \"Confirm\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  rootContainer: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","PrimaryButton","Title","Colors","Card","InstructionText","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","useWindowDimensions","width","height","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","marginTopDistance","styles","screen","rootContainer","marginTop","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","alignItems","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["C:/Users/frang/Desktop/projects/react-native-projects/guess number/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Alert,\n  useWindowDimensions,\n  KeyboardAvoidingView,\n  ScrollView,\n} from \"react-native\";\n\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\n\nfunction StartGameScreen({ onPickNumber }) {\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n  const { width, height } = useWindowDimensions();\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  function confirmInputHandler() {\n    const chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid number!\",\n        \"Number has to be a number between 1 and 99.\",\n        [{ text: \"Okay\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n  const marginTopDistance = height < 500 ? 50 : 100;\n  return (\n    <ScrollView style={styles.screen}>\n      <KeyboardAvoidingView style={styles.screen} behavior=\"position\">\n        <View style={[styles.rootContainer, { marginTop: marginTopDistance }]}>\n          <Title>Guess My Number</Title>\n          <Card>\n            <InstructionText>Enter a Number</InstructionText>\n            <TextInput\n              style={styles.numberInput}\n              maxLength={2}\n              keyboardType=\"number-pad\"\n              autoCapitalize=\"none\"\n              autoCorrect={false}\n              onChangeText={numberInputHandler}\n              value={enteredNumber}\n            />\n            <View style={styles.buttonsContainer}>\n              <View style={styles.buttonContainer}>\n                <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n              </View>\n              <View style={styles.buttonContainer}>\n                <PrimaryButton onPress={confirmInputHandler}>\n                  Confirm\n                </PrimaryButton>\n              </View>\n            </View>\n          </Card>\n        </View>\n      </KeyboardAvoidingView>\n    </ScrollView>\n  );\n}\n\nexport default StartGameScreen;\n\n// const deviceHeight = Dimensions.get(\"window\").height;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  rootContainer: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}